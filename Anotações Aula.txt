JS  

Já é interpretada, não precisa compilar
Protótipo = conjunto de funções
Client-side - Interação com cliente
Segue padrão ECMAScript = padrão para linguagens

Aplicações JS:
Web, Mobile, Smartwatches, games, Internet of thing, API's

- - - - 

Comentar código: usando // ou Começando com /* */

Quando for usar contante (const), lembrar de deixar a varaivel em letra maiúscula

Função:
function soma (){
}

A função RETURN você precisa manipular o resultado da função em outra função
ja o console.log, é só pra ver o valor que esta rodando


- - - - 

USANDO O CONSOLE

Usando na pagina web: Atalho ctrl+shift+i
NodeJs - para auxiliar alteração do site 

No terminal(verificar qual pasta esta salvo o projeto)
node.teste.js
- - - 

* Estrutura Básica e Dom

 Estrutura inicial: HTML5
Arquitetura de pastas = organização 
Pasta Assets: ferramentas como arquivos em geral
Arquivos: CSS e Js

Dom(Document Object Model: são os elementos que contem na página)

Na pagina html, chamando o inspecionar use o: document.GetElementBytagName
Mudar cor do elemento: heanding1.style.color='red'

- - - - - 

JS auto nivel (linguagem humana) e é a mais ultilizada do momento de desenvolvimentoweb

- - - - 

OPERADORES ARITMÉTICOS

=
+=
*=
/=

Camel case = são usadas em funções e variaves

- - - - 

Tipos e Variáveis

String:

New String com S maiusculo torna se um OBJETO;
Concatenar:  nome.concat(nome);
Concatenado.lenght: contar os caracteres;
Para concatenar com espaço entre as palavras: concatenado = nome + " " + sobrenome;
Para achar o indice de lista usamos o [1];
O indice, sempre começa do 0, o tamanho da letra pelo 1;
Quebra de linha: concatenado = nome + "\n" + sobrenome
ou
concatenado: '${nome} ${sobrenome}'
separar letras: nome.split("")
ver se existe a letra: frases.incluides(nome)

Numbers
declarar numero: let num = 100 (não usa aspas para declarar)

Boolean
True or Flase
valida condicionais
let validation = 3 == 0 

Array (vetores)
São as listas iteraveis do elemento
let array = []
array.push() adiciona
array.pop() retira ultimo
array.shift() retira primeiro

- - - - - 

FUNÇÕES

Tipo de Função:
Variaveis dentro da função, podem ser ultilizados dentro dela
function nome(parametro) {
 //blablabla
}



Quando invocamos o "return" a função deve ser executada, deixa de ser executada e tras um valor

function nome(parametro) {
 //blablabla
  return; // valor do retorno
}



Função anonima:

uma variavel pode armazenar uma função
const soma = function (a, b) {
}

soma (1, 2) //3
soma (5. 4) //9


Função autoinvocavel:
Uma função invocada entre parenteses, seguida por outro parenteses, que representa sua chamada
pode ter 2 parametros
(
function() {
	let name = "DIO"
	return name;
 }
)();

//DIO


Fução Callbacks
maior controle da ordem de chamada

- - - - 

ARRAYS

Spread: uma forma de trabalhar separdamente com os elementos
O que era parte de uma array, se torna elemento independente

function sum(x, y, z){
returnx + y + z;
}

const numbers = [1,2,3];
console.log(sum(...numbers));

Rest: Combina os argumentos em uma array
O que era um elemento independente se torna parte da array

function confereTamanho(...arg){
	console.log(args.length)
}
confereTamanho()
confereTamanho(1, 2)
confereTamanho(1. 2 .3)

Objects
Entre chaves {}, podemos filtrar apenas os dados que nos interessa em um objeto


IF/ELSE

function numeroPositivo(num) {
	let resultado;

if (num <0) {
	result = false;
} else {
	resultado = true;
}
return resultado;
}


SWITCH/CASE
Equivale a uma comparação de tipo e valor (===)
sempre precisa de um valor default
ideal para comparar muitos valores

function getAnimal(id) {
	switch(id) {
case 1;
return "cão";
case 2:
return "gato"
case 3:
return "passaro"
default:
return "peixe"

}
}

getAnimal(1) // cão
getAnimal(4) // peixe
getAnimal() // peixe

FOR
Loop dentro de elementos iteraveis (arrays, strings)

- - - - 

THIS
A palavra this é uma referencia de contexto
refere-se ao objeto pessoa e seu valor pode mudar de acordo com o lugar no código onde foi chamada

BIND
Clona a estrutura da função onde é chamada e aplica o valor do objeto passad como parametro

- - - - 

MAP

Tem caracteristicas
 - uma coleção de arrays no formato [chave, valor];
 - pode ser iterado por um loop for...of






















